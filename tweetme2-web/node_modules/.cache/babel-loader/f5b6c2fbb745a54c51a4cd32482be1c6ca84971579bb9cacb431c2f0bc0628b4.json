{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mskar\\\\PycharmProjects\\\\TwitterLikeApp\\\\tweetme2-web\\\\src\\\\tweets\\\\lists.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { apiTweetList } from './lookup';\nimport { Tweet } from './detail';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function TweetLists(props) {\n  _s();\n  const [tweetsInit, setTweetsInit] = useState([]);\n  const [tweets, setTweets] = useState([]);\n  const [tweetDidSet, setTweetDidSet] = useState(false);\n  useEffect(() => {\n    let final = [...props.newTweets].concat(tweetsInit);\n    if (final.length !== tweets.length) {\n      setTweets(final);\n    }\n    ;\n  }, [tweetsInit, props.newTweets, tweets]);\n  useEffect(() => {\n    if (tweetDidSet === false) {\n      const handleTweetListLookup = (response, status) => {\n        if (status === 200) {\n          setTweetsInit(response);\n          setTweetDidSet(true);\n        } else {\n          alert('There was an error with this');\n        }\n      };\n      apiTweetList(props.username, handleTweetListLookup);\n    }\n    ;\n  }, [setTweetsInit, tweetDidSet, setTweetDidSet, props.username]);\n  const handleDidRetweet = newTweet => {\n    const updateTweetInit = [...tweetsInit];\n    updateTweetInit.unshift(newTweet);\n    setTweetsInit(updateTweetInit);\n    const updateFinalTweets = [...tweets];\n    updateFinalTweets.unshift(newTweet); //he make's a bug here\n    setTweets(updateFinalTweets);\n  };\n  return tweets.map((item, index) => {\n    return /*#__PURE__*/_jsxDEV(Tweet, {\n      tweet: item,\n      didRetweet: handleDidRetweet,\n      className: \"my-5 py-5 border bg-white text-dark\"\n    }, `${index}-{item.id}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 14\n    }, this);\n  });\n}\n_s(TweetLists, \"WuGYx6Cq5cLkidx14ksJ5pBags8=\");\n_c = TweetLists;\nvar _c;\n$RefreshReg$(_c, \"TweetLists\");","map":{"version":3,"names":["React","useEffect","useState","apiTweetList","Tweet","jsxDEV","_jsxDEV","TweetLists","props","_s","tweetsInit","setTweetsInit","tweets","setTweets","tweetDidSet","setTweetDidSet","final","newTweets","concat","length","handleTweetListLookup","response","status","alert","username","handleDidRetweet","newTweet","updateTweetInit","unshift","updateFinalTweets","map","item","index","tweet","didRetweet","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/mskar/PycharmProjects/TwitterLikeApp/tweetme2-web/src/tweets/lists.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { apiTweetList } from './lookup';\r\nimport { Tweet } from './detail';\r\n\r\nexport function TweetLists(props) {\r\n  const [tweetsInit, setTweetsInit] = useState([]);\r\n  const [tweets, setTweets] = useState([]);\r\n    const [tweetDidSet, setTweetDidSet] = useState(false);\r\n    useEffect(() => {\r\n      let final = [...props.newTweets].concat(tweetsInit);\r\n      if (final.length !== tweets.length) {\r\n        setTweets(final);\r\n      };\r\n    }, [tweetsInit, props.newTweets, tweets]);\r\n    \r\n    useEffect(() => {\r\n      if (tweetDidSet === false) {\r\n        const handleTweetListLookup = (response, status) => {\r\n          if (status === 200) {\r\n            setTweetsInit(response);\r\n            setTweetDidSet(true);\r\n          }\r\n          else {\r\n            alert('There was an error with this');\r\n          }\r\n        };\r\n        apiTweetList(props.username,handleTweetListLookup);\r\n      };\r\n    }, [setTweetsInit, tweetDidSet, setTweetDidSet,props.username]);\r\n\r\n    const handleDidRetweet = (newTweet) => {\r\n      const updateTweetInit = [...tweetsInit];\r\n      updateTweetInit.unshift(newTweet);\r\n      setTweetsInit(updateTweetInit);\r\n\r\n      const updateFinalTweets = [...tweets];\r\n      updateFinalTweets.unshift(newTweet);//he make's a bug here\r\n      setTweets(updateFinalTweets);\r\n  \r\n}\r\n\r\n\r\n    return tweets.map((item, index) => {\r\n      return <Tweet tweet={item}\r\n        didRetweet={handleDidRetweet}\r\n        className='my-5 py-5 border bg-white text-dark'\r\n        key={`${index}-{item.id}`} />;\r\n    });\r\n  }"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,YAAY,QAAQ,UAAU;AACvC,SAASC,KAAK,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,OAAO,SAASC,UAAUA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAChC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACrDD,SAAS,CAAC,MAAM;IACd,IAAIe,KAAK,GAAG,CAAC,GAAGR,KAAK,CAACS,SAAS,CAAC,CAACC,MAAM,CAACR,UAAU,CAAC;IACnD,IAAIM,KAAK,CAACG,MAAM,KAAKP,MAAM,CAACO,MAAM,EAAE;MAClCN,SAAS,CAACG,KAAK,CAAC;IAClB;IAAC;EACH,CAAC,EAAE,CAACN,UAAU,EAAEF,KAAK,CAACS,SAAS,EAAEL,MAAM,CAAC,CAAC;EAEzCX,SAAS,CAAC,MAAM;IACd,IAAIa,WAAW,KAAK,KAAK,EAAE;MACzB,MAAMM,qBAAqB,GAAGA,CAACC,QAAQ,EAAEC,MAAM,KAAK;QAClD,IAAIA,MAAM,KAAK,GAAG,EAAE;UAClBX,aAAa,CAACU,QAAQ,CAAC;UACvBN,cAAc,CAAC,IAAI,CAAC;QACtB,CAAC,MACI;UACHQ,KAAK,CAAC,8BAA8B,CAAC;QACvC;MACF,CAAC;MACDpB,YAAY,CAACK,KAAK,CAACgB,QAAQ,EAACJ,qBAAqB,CAAC;IACpD;IAAC;EACH,CAAC,EAAE,CAACT,aAAa,EAAEG,WAAW,EAAEC,cAAc,EAACP,KAAK,CAACgB,QAAQ,CAAC,CAAC;EAE/D,MAAMC,gBAAgB,GAAIC,QAAQ,IAAK;IACrC,MAAMC,eAAe,GAAG,CAAC,GAAGjB,UAAU,CAAC;IACvCiB,eAAe,CAACC,OAAO,CAACF,QAAQ,CAAC;IACjCf,aAAa,CAACgB,eAAe,CAAC;IAE9B,MAAME,iBAAiB,GAAG,CAAC,GAAGjB,MAAM,CAAC;IACrCiB,iBAAiB,CAACD,OAAO,CAACF,QAAQ,CAAC,CAAC;IACpCb,SAAS,CAACgB,iBAAiB,CAAC;EAElC,CAAC;EAGG,OAAOjB,MAAM,CAACkB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;IACjC,oBAAO1B,OAAA,CAACF,KAAK;MAAC6B,KAAK,EAAEF,IAAK;MACxBG,UAAU,EAAET,gBAAiB;MAC7BU,SAAS,EAAC;IAAqC,GACzC,GAAEH,KAAM,YAAW;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EACjC,CAAC,CAAC;AACJ;AAAC9B,EAAA,CA5CaF,UAAU;AAAAiC,EAAA,GAAVjC,UAAU;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}