{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mskar\\\\PycharmProjects\\\\TwitterLikeApp\\\\tweetme2-web\\\\src\\\\tweets\\\\components.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function loadTweets(callback) {\n  const xhr = new XMLHttpRequest();\n  const method = 'GET';\n  const url = \"http://127.0.0.1:8000/api/tweet/\";\n  const responseType = \"json\";\n  xhr.responseType = responseType;\n  xhr.open(method, url);\n  xhr.onload = function () {\n    callback(xhr.response, xhr.status);\n  };\n  xhr.onerror = function (e) {\n    callback({\n      \"message\": \"The request was an error.\"\n    }, 400);\n  };\n  xhr.send();\n}\nexport function TweetLists(props) {\n  _s();\n  const [tweets, setTweets] = useState([]);\n  useEffect(() => {\n    const myCallback = (response, status) => {\n      if (status === 200) {\n        setTweets(response);\n      } else {\n        alert('There was an error with this');\n      }\n    };\n    loadTweets(myCallback);\n  }, []);\n  return tweets.map((item, index) => {\n    return /*#__PURE__*/_jsxDEV(Tweet, {\n      tweet: item,\n      className: \"my-5 py-5 border bg-white text-dark\"\n    }, `${index}-{item.id}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 14\n    }, this);\n  });\n}\n_s(TweetLists, \"tlPhWtKxaAnAviYMgoNvFaAwXFo=\");\n_c = TweetLists;\nexport function ActionBtn(props) {\n  const {\n    tweet,\n    action\n  } = props;\n  const className = props.className ? props.className : 'btn btn-primary btn-sm';\n  return action.type === \"like\" ? /*#__PURE__*/_jsxDEV(\"button\", {\n    className: className,\n    children: [\"$\", tweet.likes, \" Likes\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 7\n  }, this) : null;\n}\n_c2 = ActionBtn;\nexport function Tweet(props) {\n  const {\n    tweet\n  } = props;\n  const className = props.className ? props.className : 'col-10 mx-auto col-md-6';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [tweet.id, \" - \", tweet.content]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn btn-group\",\n      children: [/*#__PURE__*/_jsxDEV(ActionBtn, {\n        tweet: tweet,\n        action: {\n          type: \"like\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ActionBtn, {\n        tweet: tweet,\n        action: {\n          type: \"unlike\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 12\n  }, this);\n}\n_c3 = Tweet;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"TweetLists\");\n$RefreshReg$(_c2, \"ActionBtn\");\n$RefreshReg$(_c3, \"Tweet\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","loadTweets","callback","xhr","XMLHttpRequest","method","url","responseType","open","onload","response","status","onerror","e","send","TweetLists","props","_s","tweets","setTweets","myCallback","alert","map","item","index","Tweet","tweet","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","ActionBtn","action","type","children","likes","_c2","id","content","_c3","$RefreshReg$"],"sources":["C:/Users/mskar/PycharmProjects/TwitterLikeApp/tweetme2-web/src/tweets/components.js"],"sourcesContent":["import React,{ useEffect, useState } from 'react';\r\n\r\n\r\nexport function loadTweets(callback) {\r\n    const xhr = new XMLHttpRequest()\r\n    const method = 'GET'\r\n    const url = \"http://127.0.0.1:8000/api/tweet/\"\r\n    const responseType = \"json\"\r\n  \r\n    xhr.responseType = responseType\r\n    xhr.open(method, url)\r\n    xhr.onload = function () {\r\n      callback(xhr.response,xhr.status)\r\n    }\r\n    xhr.onerror = function (e) {\r\n      callback({ \"message\": \"The request was an error.\" },400)\r\n    }\r\n    xhr.send()\r\n  }\r\n  \r\n  \r\n  export function TweetLists(props) {\r\n    const [tweets, setTweets] = useState([])\r\n    \r\n    useEffect(() => {\r\n      const myCallback = (response, status) => {\r\n        if (status === 200) {\r\n          setTweets(response) \r\n        }\r\n        else {\r\n          alert('There was an error with this')\r\n        }\r\n      }\r\n      loadTweets(myCallback)\r\n    }, [])\r\n    return tweets.map((item, index) => {\r\n      return <Tweet tweet={item} className='my-5 py-5 border bg-white text-dark' key={`${index}-{item.id}`} />\r\n    })\r\n  }\r\n\r\nexport function ActionBtn(props) {\r\n    const { tweet, action } = props\r\n    const className=props.className ? props.className : 'btn btn-primary btn-sm'\r\n  \r\n  \r\n    return action.type === \"like\"?\r\n      <button className={className}>${tweet.likes} Likes</button> :\r\n      null\r\n  }\r\n  \r\n  \r\n export function Tweet(props) {\r\n    const {tweet} = props\r\n    const className = props.className ? props.className : 'col-10 mx-auto col-md-6'\r\n    return <div className={className}>\r\n      <p>\r\n        {tweet.id} - {tweet.content}\r\n      </p>\r\n      <div className='btn btn-group'>\r\n        <ActionBtn tweet={tweet} action={{ type: \"like\" }} />\r\n        <ActionBtn tweet={tweet} action={{type:\"unlike\"}} />\r\n        \r\n        </div>\r\n    </div>\r\n  }"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}